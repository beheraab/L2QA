#"" or no quotes only string
#$INTEL_PDK/libraries/custom/cdl/common/intel78custom.cdl
kit_name = "pdk783_r0.9"
tech_opt = "opt12"
kit_iter = "1850"
designsync_root_folder = "/nfs/site/disks/icf_fdk_tcmgr003/1278/"

#---- START: Users can add their own library paths for inclusion in cds.lib -----#
# user_cds_path = {
#     "sample_key1": "sample_value1",
#     "sample_key2": "sample_value2",
# }
#---- END: Users can add their own library paths for inclusion in cds.lib -----#

logging.config {
    loggers {
        Waldo.level = DEBUG
    }
    root.level = INFO
}
overrides {
    cadroot {
        #override oascript tool version as PDKs doesn't have oascript tool registered
        #tools.oascript.tool_version: 22.60p017.i
        tools.oascript.tool_version: 22.60p060.b   # use this for waldo >= v0.26.0
    }
}

system: {
    run_env: {
        use_tmp_disk = False,
        gen_console_log = True,
        console_log_rename_on_test_status = True  # EoU: console-pass.log and console-fail.log (instead of console.log)
        kit_prefetch_on_start = True  # Prefetech kit on start (while collecting tests)

        passing_profile: "pass",
        failing_profile: "fail",
        results: {
            pass: {
                include_filters: [
                    "**/*.log",
                    "**/*.spf*",
                    "**/*.json",
                    "**/*.cmd",
                    "**/*.*_ERRORS",
                    "oa_lib/**",
                    "**/cds.lib",
                    "**/*.map",
                    "**/run_details",
                    "**/star",
                    "**/*.oas",
                    "**/*.cdl"
                ]
                exclude_filters: [
                ]
            }
            fail: {
                include_filters: [
                    "*.log",
                    "**/*.log",
                    "**/*.spf",
                    "**/*.json",
                    "**/*.cmd",
                    "**/*"
                ]
                exclude_filters: []
            }
        }
    }
}
